
MC2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000072c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  0000072c  000007c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800064  00800064  000007c4  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 af 00 	jmp	0x15e	; 0x15e <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e2       	ldi	r30, 0x2C	; 44
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 36       	cpi	r26, 0x68	; 104
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <main>
  8a:	0c 94 94 03 	jmp	0x728	; 0x728 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <I2C_Init>:
  92:	11 b8       	out	0x01, r1	; 1
  94:	82 e0       	ldi	r24, 0x02	; 2
  96:	80 b9       	out	0x00, r24	; 0
  98:	08 95       	ret

0000009a <I2C_Start>:
  9a:	98 2f       	mov	r25, r24
  9c:	84 ea       	ldi	r24, 0xA4	; 164
  9e:	86 bf       	out	0x36, r24	; 54
  a0:	06 b6       	in	r0, 0x36	; 54
  a2:	07 fe       	sbrs	r0, 7
  a4:	fd cf       	rjmp	.-6      	; 0xa0 <I2C_Start+0x6>
  a6:	81 b1       	in	r24, 0x01	; 1
  a8:	88 7f       	andi	r24, 0xF8	; 248
  aa:	88 30       	cpi	r24, 0x08	; 8
  ac:	11 f0       	breq	.+4      	; 0xb2 <I2C_Start+0x18>
  ae:	80 e0       	ldi	r24, 0x00	; 0
  b0:	08 95       	ret
  b2:	93 b9       	out	0x03, r25	; 3
  b4:	84 e8       	ldi	r24, 0x84	; 132
  b6:	86 bf       	out	0x36, r24	; 54
  b8:	06 b6       	in	r0, 0x36	; 54
  ba:	07 fe       	sbrs	r0, 7
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <I2C_Start+0x1e>
  be:	81 b1       	in	r24, 0x01	; 1
  c0:	88 7f       	andi	r24, 0xF8	; 248
  c2:	88 31       	cpi	r24, 0x18	; 24
  c4:	11 f4       	brne	.+4      	; 0xca <I2C_Start+0x30>
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	08 95       	ret
  ca:	80 32       	cpi	r24, 0x20	; 32
  cc:	11 f0       	breq	.+4      	; 0xd2 <I2C_Start+0x38>
  ce:	83 e0       	ldi	r24, 0x03	; 3
  d0:	08 95       	ret
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	08 95       	ret

000000d6 <I2C_Repeated_Start>:
  d6:	98 2f       	mov	r25, r24
  d8:	84 ea       	ldi	r24, 0xA4	; 164
  da:	86 bf       	out	0x36, r24	; 54
  dc:	06 b6       	in	r0, 0x36	; 54
  de:	07 fe       	sbrs	r0, 7
  e0:	fd cf       	rjmp	.-6      	; 0xdc <I2C_Repeated_Start+0x6>
  e2:	81 b1       	in	r24, 0x01	; 1
  e4:	88 7f       	andi	r24, 0xF8	; 248
  e6:	80 31       	cpi	r24, 0x10	; 16
  e8:	11 f0       	breq	.+4      	; 0xee <I2C_Repeated_Start+0x18>
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	08 95       	ret
  ee:	93 b9       	out	0x03, r25	; 3
  f0:	84 e8       	ldi	r24, 0x84	; 132
  f2:	86 bf       	out	0x36, r24	; 54
  f4:	06 b6       	in	r0, 0x36	; 54
  f6:	07 fe       	sbrs	r0, 7
  f8:	fd cf       	rjmp	.-6      	; 0xf4 <I2C_Repeated_Start+0x1e>
  fa:	81 b1       	in	r24, 0x01	; 1
  fc:	88 7f       	andi	r24, 0xF8	; 248
  fe:	80 34       	cpi	r24, 0x40	; 64
 100:	11 f4       	brne	.+4      	; 0x106 <I2C_Repeated_Start+0x30>
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	08 95       	ret
 106:	88 34       	cpi	r24, 0x48	; 72
 108:	11 f0       	breq	.+4      	; 0x10e <I2C_Repeated_Start+0x38>
 10a:	83 e0       	ldi	r24, 0x03	; 3
 10c:	08 95       	ret
 10e:	82 e0       	ldi	r24, 0x02	; 2
 110:	08 95       	ret

00000112 <I2C_Write>:
 112:	83 b9       	out	0x03, r24	; 3
 114:	84 e8       	ldi	r24, 0x84	; 132
 116:	86 bf       	out	0x36, r24	; 54
 118:	06 b6       	in	r0, 0x36	; 54
 11a:	07 fe       	sbrs	r0, 7
 11c:	fd cf       	rjmp	.-6      	; 0x118 <I2C_Write+0x6>
 11e:	81 b1       	in	r24, 0x01	; 1
 120:	88 7f       	andi	r24, 0xF8	; 248
 122:	88 32       	cpi	r24, 0x28	; 40
 124:	11 f4       	brne	.+4      	; 0x12a <I2C_Write+0x18>
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	08 95       	ret
 12a:	80 33       	cpi	r24, 0x30	; 48
 12c:	11 f0       	breq	.+4      	; 0x132 <I2C_Write+0x20>
 12e:	82 e0       	ldi	r24, 0x02	; 2
 130:	08 95       	ret
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	08 95       	ret

00000136 <I2C_Read_Ack>:
 136:	84 ec       	ldi	r24, 0xC4	; 196
 138:	86 bf       	out	0x36, r24	; 54
 13a:	06 b6       	in	r0, 0x36	; 54
 13c:	07 fe       	sbrs	r0, 7
 13e:	fd cf       	rjmp	.-6      	; 0x13a <I2C_Read_Ack+0x4>
 140:	83 b1       	in	r24, 0x03	; 3
 142:	08 95       	ret

00000144 <I2C_Read_Nack>:
 144:	84 e8       	ldi	r24, 0x84	; 132
 146:	86 bf       	out	0x36, r24	; 54
 148:	06 b6       	in	r0, 0x36	; 54
 14a:	07 fe       	sbrs	r0, 7
 14c:	fd cf       	rjmp	.-6      	; 0x148 <I2C_Read_Nack+0x4>
 14e:	83 b1       	in	r24, 0x03	; 3
 150:	08 95       	ret

00000152 <I2C_Stop>:
 152:	84 e9       	ldi	r24, 0x94	; 148
 154:	86 bf       	out	0x36, r24	; 54
 156:	06 b6       	in	r0, 0x36	; 54
 158:	04 fc       	sbrc	r0, 4
 15a:	fd cf       	rjmp	.-6      	; 0x156 <I2C_Stop+0x4>
 15c:	08 95       	ret

0000015e <__vector_9>:
 15e:	1f 92       	push	r1
 160:	0f 92       	push	r0
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	0f 92       	push	r0
 166:	11 24       	eor	r1, r1
 168:	2f 93       	push	r18
 16a:	3f 93       	push	r19
 16c:	4f 93       	push	r20
 16e:	5f 93       	push	r21
 170:	6f 93       	push	r22
 172:	7f 93       	push	r23
 174:	8f 93       	push	r24
 176:	9f 93       	push	r25
 178:	af 93       	push	r26
 17a:	bf 93       	push	r27
 17c:	ef 93       	push	r30
 17e:	ff 93       	push	r31
 180:	e0 91 64 00 	lds	r30, 0x0064
 184:	f0 91 65 00 	lds	r31, 0x0065
 188:	30 97       	sbiw	r30, 0x00	; 0
 18a:	09 f0       	breq	.+2      	; 0x18e <__vector_9+0x30>
 18c:	09 95       	icall
 18e:	ff 91       	pop	r31
 190:	ef 91       	pop	r30
 192:	bf 91       	pop	r27
 194:	af 91       	pop	r26
 196:	9f 91       	pop	r25
 198:	8f 91       	pop	r24
 19a:	7f 91       	pop	r23
 19c:	6f 91       	pop	r22
 19e:	5f 91       	pop	r21
 1a0:	4f 91       	pop	r20
 1a2:	3f 91       	pop	r19
 1a4:	2f 91       	pop	r18
 1a6:	0f 90       	pop	r0
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	0f 90       	pop	r0
 1ac:	1f 90       	pop	r1
 1ae:	18 95       	reti

000001b0 <TIMER_Init>:
 1b0:	fc 01       	movw	r30, r24
 1b2:	80 81       	ld	r24, Z
 1b4:	81 30       	cpi	r24, 0x01	; 1
 1b6:	51 f0       	breq	.+20     	; 0x1cc <TIMER_Init+0x1c>
 1b8:	81 30       	cpi	r24, 0x01	; 1
 1ba:	28 f0       	brcs	.+10     	; 0x1c6 <TIMER_Init+0x16>
 1bc:	82 30       	cpi	r24, 0x02	; 2
 1be:	61 f0       	breq	.+24     	; 0x1d8 <TIMER_Init+0x28>
 1c0:	83 30       	cpi	r24, 0x03	; 3
 1c2:	99 f4       	brne	.+38     	; 0x1ea <TIMER_Init+0x3a>
 1c4:	0c c0       	rjmp	.+24     	; 0x1de <TIMER_Init+0x2e>
 1c6:	83 b7       	in	r24, 0x33	; 51
 1c8:	8f 7b       	andi	r24, 0xBF	; 191
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <TIMER_Init+0x20>
 1cc:	83 b7       	in	r24, 0x33	; 51
 1ce:	80 64       	ori	r24, 0x40	; 64
 1d0:	83 bf       	out	0x33, r24	; 51
 1d2:	83 b7       	in	r24, 0x33	; 51
 1d4:	87 7f       	andi	r24, 0xF7	; 247
 1d6:	08 c0       	rjmp	.+16     	; 0x1e8 <TIMER_Init+0x38>
 1d8:	83 b7       	in	r24, 0x33	; 51
 1da:	8f 7b       	andi	r24, 0xBF	; 191
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <TIMER_Init+0x32>
 1de:	83 b7       	in	r24, 0x33	; 51
 1e0:	80 64       	ori	r24, 0x40	; 64
 1e2:	83 bf       	out	0x33, r24	; 51
 1e4:	83 b7       	in	r24, 0x33	; 51
 1e6:	88 60       	ori	r24, 0x08	; 8
 1e8:	83 bf       	out	0x33, r24	; 51
 1ea:	93 b7       	in	r25, 0x33	; 51
 1ec:	81 81       	ldd	r24, Z+1	; 0x01
 1ee:	98 2b       	or	r25, r24
 1f0:	82 81       	ldd	r24, Z+2	; 0x02
 1f2:	82 95       	swap	r24
 1f4:	80 7f       	andi	r24, 0xF0	; 240
 1f6:	89 2b       	or	r24, r25
 1f8:	83 bf       	out	0x33, r24	; 51
 1fa:	89 b7       	in	r24, 0x39	; 57
 1fc:	81 60       	ori	r24, 0x01	; 1
 1fe:	89 bf       	out	0x39, r24	; 57
 200:	78 94       	sei
 202:	08 95       	ret

00000204 <TIMER_setCallBack>:
 204:	90 93 65 00 	sts	0x0065, r25
 208:	80 93 64 00 	sts	0x0064, r24
 20c:	08 95       	ret

0000020e <TIMER_Set>:
 20e:	82 bf       	out	0x32, r24	; 50
 210:	08 95       	ret

00000212 <PWM_Set>:
 212:	8c bf       	out	0x3c, r24	; 60
 214:	08 95       	ret

00000216 <TIMER_Enable>:
 216:	23 b7       	in	r18, 0x33	; 51
 218:	fc 01       	movw	r30, r24
 21a:	81 81       	ldd	r24, Z+1	; 0x01
 21c:	82 95       	swap	r24
 21e:	80 7f       	andi	r24, 0xF0	; 240
 220:	82 2b       	or	r24, r18
 222:	83 bf       	out	0x33, r24	; 51
 224:	08 95       	ret

00000226 <TIMER_disable>:
 226:	83 b7       	in	r24, 0x33	; 51
 228:	88 6f       	ori	r24, 0xF8	; 248
 22a:	83 bf       	out	0x33, r24	; 51
 22c:	08 95       	ret

0000022e <timer_delay_Ms>:
 22e:	ab 01       	movw	r20, r22
 230:	bc 01       	movw	r22, r24
 232:	20 e0       	ldi	r18, 0x00	; 0
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	82 b7       	in	r24, 0x32	; 50
 238:	87 30       	cpi	r24, 0x07	; 7
 23a:	18 f0       	brcs	.+6      	; 0x242 <timer_delay_Ms+0x14>
 23c:	12 be       	out	0x32, r1	; 50
 23e:	2f 5f       	subi	r18, 0xFF	; 255
 240:	3f 4f       	sbci	r19, 0xFF	; 255
 242:	c9 01       	movw	r24, r18
 244:	aa 27       	eor	r26, r26
 246:	97 fd       	sbrc	r25, 7
 248:	a0 95       	com	r26
 24a:	ba 2f       	mov	r27, r26
 24c:	84 17       	cp	r24, r20
 24e:	95 07       	cpc	r25, r21
 250:	a6 07       	cpc	r26, r22
 252:	b7 07       	cpc	r27, r23
 254:	80 f3       	brcs	.-32     	; 0x236 <timer_delay_Ms+0x8>
 256:	08 95       	ret

00000258 <UART_init>:
 258:	82 e0       	ldi	r24, 0x02	; 2
 25a:	8b b9       	out	0x0b, r24	; 11
 25c:	88 e1       	ldi	r24, 0x18	; 24
 25e:	8a b9       	out	0x0a, r24	; 10
 260:	86 e8       	ldi	r24, 0x86	; 134
 262:	80 bd       	out	0x20, r24	; 32
 264:	10 bc       	out	0x20, r1	; 32
 266:	87 e6       	ldi	r24, 0x67	; 103
 268:	89 b9       	out	0x09, r24	; 9
 26a:	08 95       	ret

0000026c <UART_sendByte>:
 26c:	5d 9b       	sbis	0x0b, 5	; 11
 26e:	fe cf       	rjmp	.-4      	; 0x26c <UART_sendByte>
 270:	8c b9       	out	0x0c, r24	; 12
 272:	08 95       	ret

00000274 <UART_recieveByte>:
 274:	5f 9b       	sbis	0x0b, 7	; 11
 276:	fe cf       	rjmp	.-4      	; 0x274 <UART_recieveByte>
 278:	8c b1       	in	r24, 0x0c	; 12
 27a:	08 95       	ret

0000027c <UART_sendString>:
 27c:	20 e0       	ldi	r18, 0x00	; 0
 27e:	04 c0       	rjmp	.+8      	; 0x288 <UART_sendString+0xc>
 280:	5d 9b       	sbis	0x0b, 5	; 11
 282:	fe cf       	rjmp	.-4      	; 0x280 <UART_sendString+0x4>
 284:	ec b9       	out	0x0c, r30	; 12
 286:	2f 5f       	subi	r18, 0xFF	; 255
 288:	fc 01       	movw	r30, r24
 28a:	e2 0f       	add	r30, r18
 28c:	f1 1d       	adc	r31, r1
 28e:	e0 81       	ld	r30, Z
 290:	ee 23       	and	r30, r30
 292:	b1 f7       	brne	.-20     	; 0x280 <UART_sendString+0x4>
 294:	08 95       	ret

00000296 <UART_receiveString>:
 296:	dc 01       	movw	r26, r24
 298:	5f 9b       	sbis	0x0b, 7	; 11
 29a:	fe cf       	rjmp	.-4      	; 0x298 <UART_receiveString+0x2>
 29c:	8c b1       	in	r24, 0x0c	; 12
 29e:	8c 93       	st	X, r24
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	08 c0       	rjmp	.+16     	; 0x2b4 <UART_receiveString+0x1e>
 2a4:	9f 5f       	subi	r25, 0xFF	; 255
 2a6:	5f 9b       	sbis	0x0b, 7	; 11
 2a8:	fe cf       	rjmp	.-4      	; 0x2a6 <UART_receiveString+0x10>
 2aa:	8c b1       	in	r24, 0x0c	; 12
 2ac:	fd 01       	movw	r30, r26
 2ae:	e9 0f       	add	r30, r25
 2b0:	f1 1d       	adc	r31, r1
 2b2:	80 83       	st	Z, r24
 2b4:	fd 01       	movw	r30, r26
 2b6:	e9 0f       	add	r30, r25
 2b8:	f1 1d       	adc	r31, r1
 2ba:	80 81       	ld	r24, Z
 2bc:	83 32       	cpi	r24, 0x23	; 35
 2be:	91 f7       	brne	.-28     	; 0x2a4 <UART_receiveString+0xe>
 2c0:	10 82       	st	Z, r1
 2c2:	08 95       	ret

000002c4 <CompareArray>:
 2c4:	ac 01       	movw	r20, r24
 2c6:	20 e0       	ldi	r18, 0x00	; 0
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	fa 01       	movw	r30, r20
 2cc:	e2 0f       	add	r30, r18
 2ce:	f3 1f       	adc	r31, r19
 2d0:	db 01       	movw	r26, r22
 2d2:	a2 0f       	add	r26, r18
 2d4:	b3 1f       	adc	r27, r19
 2d6:	90 81       	ld	r25, Z
 2d8:	8c 91       	ld	r24, X
 2da:	98 17       	cp	r25, r24
 2dc:	11 f0       	breq	.+4      	; 0x2e2 <CompareArray+0x1e>
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	08 95       	ret
 2e2:	2f 5f       	subi	r18, 0xFF	; 255
 2e4:	3f 4f       	sbci	r19, 0xFF	; 255
 2e6:	26 30       	cpi	r18, 0x06	; 6
 2e8:	31 05       	cpc	r19, r1
 2ea:	79 f7       	brne	.-34     	; 0x2ca <CompareArray+0x6>
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	08 95       	ret

000002f0 <eeprom_read_massage>:
 2f0:	0f 93       	push	r16
 2f2:	1f 93       	push	r17
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	8c 01       	movw	r16, r24
 2fa:	80 ea       	ldi	r24, 0xA0	; 160
 2fc:	0e 94 4d 00 	call	0x9a	; 0x9a <I2C_Start>
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	0e 94 89 00 	call	0x112	; 0x112 <I2C_Write>
 306:	81 ea       	ldi	r24, 0xA1	; 161
 308:	0e 94 6b 00 	call	0xd6	; 0xd6 <I2C_Repeated_Start>
 30c:	c0 e0       	ldi	r28, 0x00	; 0
 30e:	d0 e0       	ldi	r29, 0x00	; 0
 310:	0e 94 9b 00 	call	0x136	; 0x136 <I2C_Read_Ack>
 314:	f8 01       	movw	r30, r16
 316:	ec 0f       	add	r30, r28
 318:	fd 1f       	adc	r31, r29
 31a:	80 83       	st	Z, r24
 31c:	21 96       	adiw	r28, 0x01	; 1
 31e:	c5 30       	cpi	r28, 0x05	; 5
 320:	d1 05       	cpc	r29, r1
 322:	b1 f7       	brne	.-20     	; 0x310 <eeprom_read_massage+0x20>
 324:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Read_Nack>
 328:	0e 94 a9 00 	call	0x152	; 0x152 <I2C_Stop>
 32c:	df 91       	pop	r29
 32e:	cf 91       	pop	r28
 330:	1f 91       	pop	r17
 332:	0f 91       	pop	r16
 334:	08 95       	ret

00000336 <eeprom_write_massage>:
 336:	0f 93       	push	r16
 338:	1f 93       	push	r17
 33a:	cf 93       	push	r28
 33c:	df 93       	push	r29
 33e:	8c 01       	movw	r16, r24
 340:	80 ea       	ldi	r24, 0xA0	; 160
 342:	0e 94 4d 00 	call	0x9a	; 0x9a <I2C_Start>
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	0e 94 89 00 	call	0x112	; 0x112 <I2C_Write>
 34c:	c0 e0       	ldi	r28, 0x00	; 0
 34e:	d0 e0       	ldi	r29, 0x00	; 0
 350:	f8 01       	movw	r30, r16
 352:	ec 0f       	add	r30, r28
 354:	fd 1f       	adc	r31, r29
 356:	80 81       	ld	r24, Z
 358:	0e 94 89 00 	call	0x112	; 0x112 <I2C_Write>
 35c:	21 96       	adiw	r28, 0x01	; 1
 35e:	c6 30       	cpi	r28, 0x06	; 6
 360:	d1 05       	cpc	r29, r1
 362:	b1 f7       	brne	.-20     	; 0x350 <eeprom_write_massage+0x1a>
 364:	0e 94 a9 00 	call	0x152	; 0x152 <I2C_Stop>
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	1f 91       	pop	r17
 36e:	0f 91       	pop	r16
 370:	08 95       	ret

00000372 <change_pass_FUNC>:
 372:	ef 92       	push	r14
 374:	ff 92       	push	r15
 376:	0f 93       	push	r16
 378:	1f 93       	push	r17
 37a:	df 93       	push	r29
 37c:	cf 93       	push	r28
 37e:	cd b7       	in	r28, 0x3d	; 61
 380:	de b7       	in	r29, 0x3e	; 62
 382:	2e 97       	sbiw	r28, 0x0e	; 14
 384:	0f b6       	in	r0, 0x3f	; 63
 386:	f8 94       	cli
 388:	de bf       	out	0x3e, r29	; 62
 38a:	0f be       	out	0x3f, r0	; 63
 38c:	cd bf       	out	0x3d, r28	; 61
 38e:	87 e0       	ldi	r24, 0x07	; 7
 390:	7e 01       	movw	r14, r28
 392:	08 94       	sec
 394:	e1 1c       	adc	r14, r1
 396:	f1 1c       	adc	r15, r1
 398:	f7 01       	movw	r30, r14
 39a:	98 2f       	mov	r25, r24
 39c:	11 92       	st	Z+, r1
 39e:	9a 95       	dec	r25
 3a0:	e9 f7       	brne	.-6      	; 0x39c <change_pass_FUNC+0x2a>
 3a2:	8e 01       	movw	r16, r28
 3a4:	08 5f       	subi	r16, 0xF8	; 248
 3a6:	1f 4f       	sbci	r17, 0xFF	; 255
 3a8:	f8 01       	movw	r30, r16
 3aa:	11 92       	st	Z+, r1
 3ac:	8a 95       	dec	r24
 3ae:	e9 f7       	brne	.-6      	; 0x3aa <change_pass_FUNC+0x38>
 3b0:	80 e4       	ldi	r24, 0x40	; 64
 3b2:	9c e9       	ldi	r25, 0x9C	; 156
 3b4:	01 97       	sbiw	r24, 0x01	; 1
 3b6:	f1 f7       	brne	.-4      	; 0x3b4 <change_pass_FUNC+0x42>
 3b8:	c8 01       	movw	r24, r16
 3ba:	0e 94 4b 01 	call	0x296	; 0x296 <UART_receiveString>
 3be:	c7 01       	movw	r24, r14
 3c0:	0e 94 78 01 	call	0x2f0	; 0x2f0 <eeprom_read_massage>
 3c4:	20 e0       	ldi	r18, 0x00	; 0
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	b7 01       	movw	r22, r14
 3ca:	a8 01       	movw	r20, r16
 3cc:	fb 01       	movw	r30, r22
 3ce:	e2 0f       	add	r30, r18
 3d0:	f3 1f       	adc	r31, r19
 3d2:	da 01       	movw	r26, r20
 3d4:	a2 0f       	add	r26, r18
 3d6:	b3 1f       	adc	r27, r19
 3d8:	90 81       	ld	r25, Z
 3da:	8c 91       	ld	r24, X
 3dc:	98 17       	cp	r25, r24
 3de:	11 f0       	breq	.+4      	; 0x3e4 <change_pass_FUNC+0x72>
 3e0:	01 e0       	ldi	r16, 0x01	; 1
 3e2:	06 c0       	rjmp	.+12     	; 0x3f0 <change_pass_FUNC+0x7e>
 3e4:	2f 5f       	subi	r18, 0xFF	; 255
 3e6:	3f 4f       	sbci	r19, 0xFF	; 255
 3e8:	26 30       	cpi	r18, 0x06	; 6
 3ea:	31 05       	cpc	r19, r1
 3ec:	79 f7       	brne	.-34     	; 0x3cc <change_pass_FUNC+0x5a>
 3ee:	00 e0       	ldi	r16, 0x00	; 0
 3f0:	80 91 67 00 	lds	r24, 0x0067
 3f4:	82 30       	cpi	r24, 0x02	; 2
 3f6:	90 f0       	brcs	.+36     	; 0x41c <change_pass_FUNC+0xaa>
 3f8:	10 92 67 00 	sts	0x0067, r1
 3fc:	86 e1       	ldi	r24, 0x16	; 22
 3fe:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 402:	da 9a       	sbi	0x1b, 2	; 27
 404:	60 e6       	ldi	r22, 0x60	; 96
 406:	7a ee       	ldi	r23, 0xEA	; 234
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	0e 94 17 01 	call	0x22e	; 0x22e <timer_delay_Ms>
 410:	81 e1       	ldi	r24, 0x11	; 17
 412:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 416:	da 98       	cbi	0x1b, 2	; 27
 418:	0e 94 49 02 	call	0x492	; 0x492 <normal_mod_FUNC>
 41c:	00 23       	and	r16, r16
 41e:	b1 f4       	brne	.+44     	; 0x44c <change_pass_FUNC+0xda>
 420:	85 e1       	ldi	r24, 0x15	; 21
 422:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 426:	8e 01       	movw	r16, r28
 428:	08 5f       	subi	r16, 0xF8	; 248
 42a:	1f 4f       	sbci	r17, 0xFF	; 255
 42c:	c8 01       	movw	r24, r16
 42e:	0e 94 4b 01 	call	0x296	; 0x296 <UART_receiveString>
 432:	c8 01       	movw	r24, r16
 434:	0e 94 9b 01 	call	0x336	; 0x336 <eeprom_write_massage>
 438:	80 e4       	ldi	r24, 0x40	; 64
 43a:	9c e9       	ldi	r25, 0x9C	; 156
 43c:	01 97       	sbiw	r24, 0x01	; 1
 43e:	f1 f7       	brne	.-4      	; 0x43c <change_pass_FUNC+0xca>
 440:	81 e1       	ldi	r24, 0x11	; 17
 442:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 446:	0e 94 49 02 	call	0x492	; 0x492 <normal_mod_FUNC>
 44a:	16 c0       	rjmp	.+44     	; 0x478 <__stack+0x19>
 44c:	87 e1       	ldi	r24, 0x17	; 23
 44e:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 452:	80 e2       	ldi	r24, 0x20	; 32
 454:	9e e4       	ldi	r25, 0x4E	; 78
 456:	28 ec       	ldi	r18, 0xC8	; 200
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	f9 01       	movw	r30, r18
 45c:	31 97       	sbiw	r30, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <change_pass_FUNC+0xea>
 460:	01 97       	sbiw	r24, 0x01	; 1
 462:	d9 f7       	brne	.-10     	; 0x45a <change_pass_FUNC+0xe8>
 464:	80 91 67 00 	lds	r24, 0x0067
 468:	8f 5f       	subi	r24, 0xFF	; 255
 46a:	80 93 67 00 	sts	0x0067, r24
 46e:	83 e1       	ldi	r24, 0x13	; 19
 470:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 474:	0e 94 b9 01 	call	0x372	; 0x372 <change_pass_FUNC>
 478:	2e 96       	adiw	r28, 0x0e	; 14
 47a:	0f b6       	in	r0, 0x3f	; 63
 47c:	f8 94       	cli
 47e:	de bf       	out	0x3e, r29	; 62
 480:	0f be       	out	0x3f, r0	; 63
 482:	cd bf       	out	0x3d, r28	; 61
 484:	cf 91       	pop	r28
 486:	df 91       	pop	r29
 488:	1f 91       	pop	r17
 48a:	0f 91       	pop	r16
 48c:	ff 90       	pop	r15
 48e:	ef 90       	pop	r14
 490:	08 95       	ret

00000492 <normal_mod_FUNC>:
 492:	0e 94 3a 01 	call	0x274	; 0x274 <UART_recieveByte>
 496:	82 31       	cpi	r24, 0x12	; 18
 498:	19 f0       	breq	.+6      	; 0x4a0 <normal_mod_FUNC+0xe>
 49a:	83 31       	cpi	r24, 0x13	; 19
 49c:	d1 f7       	brne	.-12     	; 0x492 <normal_mod_FUNC>
 49e:	03 c0       	rjmp	.+6      	; 0x4a6 <normal_mod_FUNC+0x14>
 4a0:	0e 94 b9 01 	call	0x372	; 0x372 <change_pass_FUNC>
 4a4:	08 95       	ret
 4a6:	0e 94 56 02 	call	0x4ac	; 0x4ac <opend_door_FUNC>
 4aa:	08 95       	ret

000004ac <opend_door_FUNC>:
 4ac:	ef 92       	push	r14
 4ae:	ff 92       	push	r15
 4b0:	0f 93       	push	r16
 4b2:	1f 93       	push	r17
 4b4:	df 93       	push	r29
 4b6:	cf 93       	push	r28
 4b8:	cd b7       	in	r28, 0x3d	; 61
 4ba:	de b7       	in	r29, 0x3e	; 62
 4bc:	2e 97       	sbiw	r28, 0x0e	; 14
 4be:	0f b6       	in	r0, 0x3f	; 63
 4c0:	f8 94       	cli
 4c2:	de bf       	out	0x3e, r29	; 62
 4c4:	0f be       	out	0x3f, r0	; 63
 4c6:	cd bf       	out	0x3d, r28	; 61
 4c8:	80 e4       	ldi	r24, 0x40	; 64
 4ca:	9c e9       	ldi	r25, 0x9C	; 156
 4cc:	01 97       	sbiw	r24, 0x01	; 1
 4ce:	f1 f7       	brne	.-4      	; 0x4cc <opend_door_FUNC+0x20>
 4d0:	88 e0       	ldi	r24, 0x08	; 8
 4d2:	e8 2e       	mov	r14, r24
 4d4:	f1 2c       	mov	r15, r1
 4d6:	ec 0e       	add	r14, r28
 4d8:	fd 1e       	adc	r15, r29
 4da:	c7 01       	movw	r24, r14
 4dc:	0e 94 4b 01 	call	0x296	; 0x296 <UART_receiveString>
 4e0:	8e 01       	movw	r16, r28
 4e2:	0f 5f       	subi	r16, 0xFF	; 255
 4e4:	1f 4f       	sbci	r17, 0xFF	; 255
 4e6:	c8 01       	movw	r24, r16
 4e8:	0e 94 78 01 	call	0x2f0	; 0x2f0 <eeprom_read_massage>
 4ec:	20 e0       	ldi	r18, 0x00	; 0
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	b7 01       	movw	r22, r14
 4f2:	a8 01       	movw	r20, r16
 4f4:	fb 01       	movw	r30, r22
 4f6:	e2 0f       	add	r30, r18
 4f8:	f3 1f       	adc	r31, r19
 4fa:	da 01       	movw	r26, r20
 4fc:	a2 0f       	add	r26, r18
 4fe:	b3 1f       	adc	r27, r19
 500:	90 81       	ld	r25, Z
 502:	8c 91       	ld	r24, X
 504:	98 17       	cp	r25, r24
 506:	11 f0       	breq	.+4      	; 0x50c <opend_door_FUNC+0x60>
 508:	01 e0       	ldi	r16, 0x01	; 1
 50a:	06 c0       	rjmp	.+12     	; 0x518 <opend_door_FUNC+0x6c>
 50c:	2f 5f       	subi	r18, 0xFF	; 255
 50e:	3f 4f       	sbci	r19, 0xFF	; 255
 510:	26 30       	cpi	r18, 0x06	; 6
 512:	31 05       	cpc	r19, r1
 514:	79 f7       	brne	.-34     	; 0x4f4 <opend_door_FUNC+0x48>
 516:	00 e0       	ldi	r16, 0x00	; 0
 518:	80 91 66 00 	lds	r24, 0x0066
 51c:	82 30       	cpi	r24, 0x02	; 2
 51e:	90 f0       	brcs	.+36     	; 0x544 <opend_door_FUNC+0x98>
 520:	10 92 66 00 	sts	0x0066, r1
 524:	86 e1       	ldi	r24, 0x16	; 22
 526:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 52a:	da 9a       	sbi	0x1b, 2	; 27
 52c:	60 e6       	ldi	r22, 0x60	; 96
 52e:	7a ee       	ldi	r23, 0xEA	; 234
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 17 01 	call	0x22e	; 0x22e <timer_delay_Ms>
 538:	81 e1       	ldi	r24, 0x11	; 17
 53a:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 53e:	da 98       	cbi	0x1b, 2	; 27
 540:	0e 94 49 02 	call	0x492	; 0x492 <normal_mod_FUNC>
 544:	00 23       	and	r16, r16
 546:	19 f5       	brne	.+70     	; 0x58e <opend_door_FUNC+0xe2>
 548:	10 92 66 00 	sts	0x0066, r1
 54c:	85 e1       	ldi	r24, 0x15	; 21
 54e:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 552:	d8 9a       	sbi	0x1b, 0	; 27
 554:	d9 98       	cbi	0x1b, 1	; 27
 556:	8f ef       	ldi	r24, 0xFF	; 255
 558:	9f ef       	ldi	r25, 0xFF	; 255
 55a:	28 ec       	ldi	r18, 0xC8	; 200
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	f9 01       	movw	r30, r18
 560:	31 97       	sbiw	r30, 0x01	; 1
 562:	f1 f7       	brne	.-4      	; 0x560 <opend_door_FUNC+0xb4>
 564:	01 97       	sbiw	r24, 0x01	; 1
 566:	d9 f7       	brne	.-10     	; 0x55e <opend_door_FUNC+0xb2>
 568:	d9 9a       	sbi	0x1b, 1	; 27
 56a:	d8 98       	cbi	0x1b, 0	; 27
 56c:	8f ef       	ldi	r24, 0xFF	; 255
 56e:	9f ef       	ldi	r25, 0xFF	; 255
 570:	28 ec       	ldi	r18, 0xC8	; 200
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	f9 01       	movw	r30, r18
 576:	31 97       	sbiw	r30, 0x01	; 1
 578:	f1 f7       	brne	.-4      	; 0x576 <opend_door_FUNC+0xca>
 57a:	01 97       	sbiw	r24, 0x01	; 1
 57c:	d9 f7       	brne	.-10     	; 0x574 <opend_door_FUNC+0xc8>
 57e:	d8 98       	cbi	0x1b, 0	; 27
 580:	d9 98       	cbi	0x1b, 1	; 27
 582:	81 e1       	ldi	r24, 0x11	; 17
 584:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 588:	0e 94 49 02 	call	0x492	; 0x492 <normal_mod_FUNC>
 58c:	16 c0       	rjmp	.+44     	; 0x5ba <opend_door_FUNC+0x10e>
 58e:	87 e1       	ldi	r24, 0x17	; 23
 590:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 594:	80 e2       	ldi	r24, 0x20	; 32
 596:	9e e4       	ldi	r25, 0x4E	; 78
 598:	28 ec       	ldi	r18, 0xC8	; 200
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	f9 01       	movw	r30, r18
 59e:	31 97       	sbiw	r30, 0x01	; 1
 5a0:	f1 f7       	brne	.-4      	; 0x59e <opend_door_FUNC+0xf2>
 5a2:	01 97       	sbiw	r24, 0x01	; 1
 5a4:	d9 f7       	brne	.-10     	; 0x59c <opend_door_FUNC+0xf0>
 5a6:	80 91 66 00 	lds	r24, 0x0066
 5aa:	8f 5f       	subi	r24, 0xFF	; 255
 5ac:	80 93 66 00 	sts	0x0066, r24
 5b0:	83 e1       	ldi	r24, 0x13	; 19
 5b2:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 5b6:	0e 94 56 02 	call	0x4ac	; 0x4ac <opend_door_FUNC>
 5ba:	2e 96       	adiw	r28, 0x0e	; 14
 5bc:	0f b6       	in	r0, 0x3f	; 63
 5be:	f8 94       	cli
 5c0:	de bf       	out	0x3e, r29	; 62
 5c2:	0f be       	out	0x3f, r0	; 63
 5c4:	cd bf       	out	0x3d, r28	; 61
 5c6:	cf 91       	pop	r28
 5c8:	df 91       	pop	r29
 5ca:	1f 91       	pop	r17
 5cc:	0f 91       	pop	r16
 5ce:	ff 90       	pop	r15
 5d0:	ef 90       	pop	r14
 5d2:	08 95       	ret

000005d4 <first_time_comp>:
 5d4:	ef 92       	push	r14
 5d6:	ff 92       	push	r15
 5d8:	0f 93       	push	r16
 5da:	1f 93       	push	r17
 5dc:	df 93       	push	r29
 5de:	cf 93       	push	r28
 5e0:	cd b7       	in	r28, 0x3d	; 61
 5e2:	de b7       	in	r29, 0x3e	; 62
 5e4:	64 97       	sbiw	r28, 0x14	; 20
 5e6:	0f b6       	in	r0, 0x3f	; 63
 5e8:	f8 94       	cli
 5ea:	de bf       	out	0x3e, r29	; 62
 5ec:	0f be       	out	0x3f, r0	; 63
 5ee:	cd bf       	out	0x3d, r28	; 61
 5f0:	7e 01       	movw	r14, r28
 5f2:	08 94       	sec
 5f4:	e1 1c       	adc	r14, r1
 5f6:	f1 1c       	adc	r15, r1
 5f8:	c7 01       	movw	r24, r14
 5fa:	0e 94 4b 01 	call	0x296	; 0x296 <UART_receiveString>
 5fe:	c7 01       	movw	r24, r14
 600:	0e 94 9b 01 	call	0x336	; 0x336 <eeprom_write_massage>
 604:	80 e4       	ldi	r24, 0x40	; 64
 606:	9c e9       	ldi	r25, 0x9C	; 156
 608:	01 97       	sbiw	r24, 0x01	; 1
 60a:	f1 f7       	brne	.-4      	; 0x608 <first_time_comp+0x34>
 60c:	8e 01       	movw	r16, r28
 60e:	05 5f       	subi	r16, 0xF5	; 245
 610:	1f 4f       	sbci	r17, 0xFF	; 255
 612:	c8 01       	movw	r24, r16
 614:	0e 94 78 01 	call	0x2f0	; 0x2f0 <eeprom_read_massage>
 618:	c8 01       	movw	r24, r16
 61a:	0e 94 4b 01 	call	0x296	; 0x296 <UART_receiveString>
 61e:	20 e0       	ldi	r18, 0x00	; 0
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	b8 01       	movw	r22, r16
 624:	a7 01       	movw	r20, r14
 626:	fb 01       	movw	r30, r22
 628:	e2 0f       	add	r30, r18
 62a:	f3 1f       	adc	r31, r19
 62c:	da 01       	movw	r26, r20
 62e:	a2 0f       	add	r26, r18
 630:	b3 1f       	adc	r27, r19
 632:	90 81       	ld	r25, Z
 634:	8c 91       	ld	r24, X
 636:	98 17       	cp	r25, r24
 638:	31 f4       	brne	.+12     	; 0x646 <first_time_comp+0x72>
 63a:	2f 5f       	subi	r18, 0xFF	; 255
 63c:	3f 4f       	sbci	r19, 0xFF	; 255
 63e:	26 30       	cpi	r18, 0x06	; 6
 640:	31 05       	cpc	r19, r1
 642:	89 f7       	brne	.-30     	; 0x626 <first_time_comp+0x52>
 644:	06 c0       	rjmp	.+12     	; 0x652 <first_time_comp+0x7e>
 646:	87 e1       	ldi	r24, 0x17	; 23
 648:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 64c:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <first_time_comp>
 650:	05 c0       	rjmp	.+10     	; 0x65c <first_time_comp+0x88>
 652:	84 e1       	ldi	r24, 0x14	; 20
 654:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 658:	0e 94 49 02 	call	0x492	; 0x492 <normal_mod_FUNC>
 65c:	64 96       	adiw	r28, 0x14	; 20
 65e:	0f b6       	in	r0, 0x3f	; 63
 660:	f8 94       	cli
 662:	de bf       	out	0x3e, r29	; 62
 664:	0f be       	out	0x3f, r0	; 63
 666:	cd bf       	out	0x3d, r28	; 61
 668:	cf 91       	pop	r28
 66a:	df 91       	pop	r29
 66c:	1f 91       	pop	r17
 66e:	0f 91       	pop	r16
 670:	ff 90       	pop	r15
 672:	ef 90       	pop	r14
 674:	08 95       	ret

00000676 <eeprom_read_byte>:
 676:	1f 93       	push	r17
 678:	80 ea       	ldi	r24, 0xA0	; 160
 67a:	0e 94 4d 00 	call	0x9a	; 0x9a <I2C_Start>
 67e:	80 e0       	ldi	r24, 0x00	; 0
 680:	0e 94 89 00 	call	0x112	; 0x112 <I2C_Write>
 684:	81 ea       	ldi	r24, 0xA1	; 161
 686:	0e 94 6b 00 	call	0xd6	; 0xd6 <I2C_Repeated_Start>
 68a:	0e 94 a2 00 	call	0x144	; 0x144 <I2C_Read_Nack>
 68e:	18 2f       	mov	r17, r24
 690:	0e 94 a9 00 	call	0x152	; 0x152 <I2C_Stop>
 694:	81 2f       	mov	r24, r17
 696:	1f 91       	pop	r17
 698:	08 95       	ret

0000069a <eeprom_write_byte>:
 69a:	1f 93       	push	r17
 69c:	18 2f       	mov	r17, r24
 69e:	80 ea       	ldi	r24, 0xA0	; 160
 6a0:	0e 94 4d 00 	call	0x9a	; 0x9a <I2C_Start>
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	0e 94 89 00 	call	0x112	; 0x112 <I2C_Write>
 6aa:	81 2f       	mov	r24, r17
 6ac:	0e 94 89 00 	call	0x112	; 0x112 <I2C_Write>
 6b0:	0e 94 a9 00 	call	0x152	; 0x152 <I2C_Stop>
 6b4:	1f 91       	pop	r17
 6b6:	08 95       	ret

000006b8 <main>:
 6b8:	0f 93       	push	r16
 6ba:	1f 93       	push	r17
 6bc:	df 93       	push	r29
 6be:	cf 93       	push	r28
 6c0:	00 d0       	rcall	.+0      	; 0x6c2 <main+0xa>
 6c2:	0f 92       	push	r0
 6c4:	cd b7       	in	r28, 0x3d	; 61
 6c6:	de b7       	in	r29, 0x3e	; 62
 6c8:	8f ef       	ldi	r24, 0xFF	; 255
 6ca:	8a bb       	out	0x1a, r24	; 26
 6cc:	de 01       	movw	r26, r28
 6ce:	11 96       	adiw	r26, 0x01	; 1
 6d0:	e0 e6       	ldi	r30, 0x60	; 96
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	83 e0       	ldi	r24, 0x03	; 3
 6d6:	01 90       	ld	r0, Z+
 6d8:	0d 92       	st	X+, r0
 6da:	81 50       	subi	r24, 0x01	; 1
 6dc:	e1 f7       	brne	.-8      	; 0x6d6 <main+0x1e>
 6de:	ce 01       	movw	r24, r28
 6e0:	01 96       	adiw	r24, 0x01	; 1
 6e2:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <TIMER_Init>
 6e6:	0e 94 2c 01 	call	0x258	; 0x258 <UART_init>
 6ea:	0e 94 49 00 	call	0x92	; 0x92 <I2C_Init>
 6ee:	0e 94 3b 03 	call	0x676	; 0x676 <eeprom_read_byte>
 6f2:	80 53       	subi	r24, 0x30	; 48
 6f4:	8a 30       	cpi	r24, 0x0A	; 10
 6f6:	18 f0       	brcs	.+6      	; 0x6fe <main+0x46>
 6f8:	81 e4       	ldi	r24, 0x41	; 65
 6fa:	0e 94 4d 03 	call	0x69a	; 0x69a <eeprom_write_byte>
 6fe:	00 e5       	ldi	r16, 0x50	; 80
 700:	13 ec       	ldi	r17, 0xC3	; 195
 702:	c8 01       	movw	r24, r16
 704:	01 97       	sbiw	r24, 0x01	; 1
 706:	f1 f7       	brne	.-4      	; 0x704 <main+0x4c>
 708:	0e 94 3b 03 	call	0x676	; 0x676 <eeprom_read_byte>
 70c:	81 34       	cpi	r24, 0x41	; 65
 70e:	31 f4       	brne	.+12     	; 0x71c <main+0x64>
 710:	80 e1       	ldi	r24, 0x10	; 16
 712:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 716:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <first_time_comp>
 71a:	f3 cf       	rjmp	.-26     	; 0x702 <main+0x4a>
 71c:	81 e1       	ldi	r24, 0x11	; 17
 71e:	0e 94 36 01 	call	0x26c	; 0x26c <UART_sendByte>
 722:	0e 94 49 02 	call	0x492	; 0x492 <normal_mod_FUNC>
 726:	ed cf       	rjmp	.-38     	; 0x702 <main+0x4a>

00000728 <_exit>:
 728:	f8 94       	cli

0000072a <__stop_program>:
 72a:	ff cf       	rjmp	.-2      	; 0x72a <__stop_program>
